---
name: cd

on:
  workflow_dispatch:
  push:
    tags:
      - "*.*.*"

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SUB_TAG: code-oss-git

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable={{is_default_branch}},prefix=${{ env.SUB_TAG }}-
            type=ref,event=branch,prefix=${{ env.SUB_TAG }}-
            type=ref,event=pr,prefix=${{ env.SUB_TAG }}-
            type=semver,pattern={{version}},prefix=${{ env.SUB_TAG }}-
            type=semver,pattern={{major}}.{{minor}},prefix=${{ env.SUB_TAG }}-
            type=semver,pattern={{major}},prefix=${{ env.SUB_TAG }}-
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        id: build
        with:
          context: code-oss-git
          platforms: linux/amd64,linux/arm64
          push: true
          sbom: true
          provenance: mode=max
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
